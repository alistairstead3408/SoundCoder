/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package stead.alistair.com.soundcoder.jni;


/** Processor - for processing images that are stored in an image pool
*/
public class Processor {
  private long swigCPtr;
  protected boolean swigCMemOwn;
  public Processor(long cPtr, boolean cMemoryOwn) {
	swigCMemOwn = cMemoryOwn;
	swigCPtr = cPtr;
  }
  public static long getCPtr(Processor obj) {
	return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        cvcameraJNI.delete_Processor(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Processor() {
    this(cvcameraJNI.new_Processor(), true);
  }

//  public float at(Mat in, int row, int col) {
//    return cvcameraJNI.Processor_at(swigCPtr, this, Mat.getCPtr(in), in, row, col);
//  }

  public int getLongLength(long ptr) {
    return cvcameraJNI.Processor_getLongLength(swigCPtr, this, ptr);
  }

  public long getLongVal(long ptr, int index) {
    return cvcameraJNI.Processor_getLongVal(swigCPtr, this, ptr, index);
  }

//  public float getLineHueValues(int input_idx, image_pool pool) {
//    return cvcameraJNI.Processor_getLineHueValues(swigCPtr, this, input_idx, image_pool.getCPtr(pool), pool);
//  }
//
//  public int getBlobLabels(int input_idx, image_pool pool, int satThreshold, int valThreshold) {
//    return cvcameraJNI.Processor_getBlobLabels(swigCPtr, this, input_idx, image_pool.getCPtr(pool), pool, satThreshold, valThreshold);
//  }
//
//  public void filterBackground(int input_idx, image_pool pool, int satThreshold, int valThreshold) {
//    cvcameraJNI.Processor_filterBackground(swigCPtr, this, input_idx, image_pool.getCPtr(pool), pool, satThreshold, valThreshold);
//  }
//
//  public long detectNewBlobs(long inputBlobControl, int input_idx, image_pool pool, int satThreshold, int valThreshold) {
//    return cvcameraJNI.Processor_detectNewBlobs(swigCPtr, this, inputBlobControl, input_idx, image_pool.getCPtr(pool), pool, satThreshold, valThreshold);
//  }

  public long getBlobControl(long knn) {
    return cvcameraJNI.Processor_getBlobControl(swigCPtr, this, knn);
  }

  public void deleteObject(long ptr) {
    cvcameraJNI.Processor_deleteObject(swigCPtr, this, ptr);
  }

}
