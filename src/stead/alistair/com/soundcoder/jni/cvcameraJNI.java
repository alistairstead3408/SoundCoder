/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package stead.alistair.com.soundcoder.jni;

import com.opencv.jni.*; //import the android-opencv jni wrappers

public class cvcameraJNI {

	static {
		try {
			//load the cvcamera library, make sure that libcvcamera.so is in your <project>/libs/armeabi directory
			//so that android sdk automatically installs it along with the app.
			
			//the android-opencv lib must be loaded first inorder for the cvcamera
			//lib to be found
			//check the apk generated, by opening it in an archive manager, to verify that
			//both these libraries are present
			System.loadLibrary("android-opencv");
			System.loadLibrary("cvcamera");
		} catch (UnsatisfiedLinkError e) {
			//badness
			throw e;
		}
	}


  public final static native int DETECT_HOUGH_get();
  public final static native long new_Processor();
  public final static native void delete_Processor(long jarg1);
  public final static native float Processor_at(long jarg1, Processor jarg1_, long jarg2, Mat jarg2_, int jarg3, int jarg4);
  public final static native int Processor_getLongLength(long jarg1, Processor jarg1_, long jarg2);
  public final static native long Processor_getLongVal(long jarg1, Processor jarg1_, long jarg2, int jarg3);
  public final static native float Processor_getLineHueValues(long jarg1, Processor jarg1_, int jarg2, long jarg3, image_pool jarg3_);
  public final static native int Processor_getBlobLabels(long jarg1, Processor jarg1_, int jarg2, long jarg3, image_pool jarg3_, int jarg4, int jarg5);
  public final static native void Processor_filterBackground(long jarg1, Processor jarg1_, int jarg2, long jarg3, image_pool jarg3_, int jarg4, int jarg5);
  public final static native long Processor_detectNewBlobs(long jarg1, Processor jarg1_, long jarg2, int jarg3, long jarg4, image_pool jarg4_, int jarg5, int jarg6);
  public final static native long Processor_getBlobControl(long jarg1, Processor jarg1_, long jarg2);
  public final static native void Processor_deleteObject(long jarg1, Processor jarg1_, long jarg2);
}
